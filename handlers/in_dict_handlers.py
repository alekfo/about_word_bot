from peewee import IntegrityError
from telebot import TeleBot
from telebot.types import Message, BotCommand
from states import reg_states
from keyboards.keybords import choise_lang_markup, back_to_choise, first_step_markup, commands
from services.get_data import get_data
from database.peewee_db import User, History

def reg_in_dict_handlers(bot: TeleBot):
    """
    –§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤ bot
    :param bot: –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ (–æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ TeleBot)
    :return: None. –ò–∑–º–µ–Ω—è–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –±–æ—Ç–∞
    –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è –≤ –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤
    """

    @bot.message_handler(state=reg_states.choise)
    def send_welcome(message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è choise (–ª–æ–≤–∏—Ç —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)
        :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è c –≤—ã–±—Ä–∞–Ω–Ω—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ø–µ—Ä–µ–≤–æ–¥–∞
        –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ø–µ—Ä–µ–≤–æ–¥–∞,
        –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞,
        —Ç–∞–∫–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–≤–∞—Ä–µ–π.
        –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" –º–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ menu –∏
        –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏.
        –ú–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ in_dict
        """

        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            if '–†—É—Å—Å–∫–æ-–∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Å–ª–æ–≤–∞—Ä—å' in message.text:
                data['lang'] = 'ru-en'
            elif '–ê–Ω–≥–ª–æ-—Ä—É—Å—Å–∫–∏–π —Å–ª–æ–≤–∞—Ä—å' in message.text:
                data['lang'] = 'en-ru'
            elif '–†—É—Å—Å–∫–æ-–Ω–µ–º–µ—Ü–∫–∏–π —Å–ª–æ–≤–∞—Ä—å' in message.text:
                data['lang'] = 'ru-de'
            elif '–†—É—Å—Å–∫–æ-—Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π —Å–ª–æ–≤–∞—Ä—å' in message.text:
                data['lang'] = 'ru-fr'
            elif '–†—É—Å—Å–∫–∏–µ —Å–∏–Ω–æ–Ω–∏–º—ã' in message.text:
                data['lang'] = 'ru-ru'
            elif '–ê–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–∏–Ω–æ–Ω–∏–º—ã' in message.text:
                data['lang'] = 'en-en'

        bot.send_message(message.chat.id, f'‚úÖ–û—Ç–ª–∏—á–Ω–æ! –¢—ã –≤—ã–±—Ä–∞–ª <b>{message.text}</b>.\n'
                                          f'–ü—Ä–∏—à–ª–∏ –ª—é–±–æ–µ —Å–ª–æ–≤–æüî§ –Ω–∞ –∏—Å—Ö–æ–¥–Ω–æ–º —è–∑—ã–∫–µ –∏ '
                                          f'—è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.\n'
                                          f'‚Ü©Ô∏è–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–≤–∞—Ä–µ–π ‚Äî '
                                          f'–Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–≤–∞—Ä–µ–π</b>',
                         reply_markup=back_to_choise(), parse_mode='HTML')
        bot.set_state(message.from_user.id, reg_states.in_dict, message.chat.id)

    @bot.message_handler(state=reg_states.in_dict)
    def translate(message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è in_dict (–ª–æ–≤–∏—Ç —Å–ª–æ–≤–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞)
        :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è c
        —Å–ª–æ–≤–æ–º –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ–º "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–≤–∞—Ä–µ–π".
        –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–≤–∞—Ä–µ–π' –º–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ choise –∏
        –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ª–æ–∞–≤–∞—Ä–µ–π.
        –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ª–æ–≤–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ —Ñ—É–Ω–∫—Ü–∏–∏ get_data –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        –æ –¥–∞–Ω–Ω–æ–º —Å–ª–æ–≤–∞.
        –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –º–æ–¥–µ–ª—å History –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç get_data.
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Ç—Ä–æ–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–ª–æ–≤–µ
        """

        if '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–≤–∞—Ä–µ–π' in message.text:
            bot.set_state(message.from_user.id, reg_states.choise, message.chat.id)
            bot.send_message(message.chat.id, 'üåê–í—ã–±–µ—Ä–∏ —Å–ª–æ–≤–∞—Ä—å', reply_markup=choise_lang_markup())
        elif message.text.isalpha() and message.text != '‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–≤–∞—Ä–µ–π':
            with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
                curr_lang = data.get('lang', 'en-ru')
                result = get_data(message.text, curr_lang)
            cur_user = User.get_or_none(User.user_id == message.from_user.id)
            History.create(
                user=cur_user,
                results=result
            )

            bot.send_message(message.chat.id, f'{result}\n'
                                              f'üöÄ–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚Äî –æ—Ç–ø—Ä–∞–≤—å –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ,\n'
                                              f'‚Ü©Ô∏è–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–≤–∞—Ä–µ–π ‚Äî '
                                              f'–Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–≤–∞—Ä–µ–π</b>',
                             reply_markup=back_to_choise(), parse_mode='HTML')
        else:
            bot.send_message(message.chat.id, '‚ùå–°–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤. –í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–ª–æ–≤–æ '
                                              '–∏–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–≤–∞—Ä–µ–π, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É.',
                             reply_markup=back_to_choise())