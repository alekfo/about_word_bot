from peewee import IntegrityError
from telebot import TeleBot
from telebot.types import Message, BotCommand
from states import reg_states
from keyboards.keybords import (choise_lang_markup,
                                back_to_choise,
                                first_step_markup,
                                commands,
                                turning_on_mailing,
                                turning_off_mailing)
from services.get_data import get_data
from database.peewee_db import User, History


def reg_main_handlers(bot: TeleBot):
    """
    –§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤ bot
    :param bot: –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ (–æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ TeleBot)
    :return: None. –ò–∑–º–µ–Ω—è–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –±–æ—Ç–∞
    –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è –≤ –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤
    """

    bot.set_my_commands([
        BotCommand("/start", "üåê–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫"),
        BotCommand("/help", "‚ÑπÔ∏è–ü–æ–º–æ—â—å –∏ –∫–æ–º–∞–Ω–¥—ã"),
        BotCommand("/history", "üìñ–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤"),
        BotCommand("/mailing", "üîî–£–ø—Ä–∞–≤–ª—è—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–æ–π")
    ])


    @bot.message_handler(commands=['help'])
    def show_cmd(message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
        :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏
        –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏, –º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ menu
        """

        curr_user = User.get_or_none(User.user_id == message.from_user.id)
        if curr_user:
            cmds = bot.get_my_commands()
            output_txt = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: \n\n'

            for cmd in cmds:
                output_txt += f'{cmd.command} - {cmd.description}\n'
            bot.send_message(message.chat.id, output_txt, reply_markup=commands())
            bot.set_state(message.from_user.id, reg_states.menu, message.chat.id)
        else:
            bot.send_message(message.chat.id, '–ü–æ—Ö–æ–∂–µ —Ç—ã —Ç—É—Ç –≤–ø–µ—Ä–≤—ã–µ? –ß—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å —á—Ç–æ –∫ —á–µ–º—É –Ω–∞–∂–º–∏ –Ω–∞ /start', reply_markup=commands(), parse_mode='HTML')
            bot.set_state(message.from_user.id, reg_states.menu, message.chat.id)

    @bot.message_handler(commands=['start'])
    def send_welcome(message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
        :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤–æ–∑–º–æ–∂–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–µ—Ä–µ–≤–æ–¥–∞,
        –º–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ choise
        """

        user_id = message.from_user.id
        username = message.from_user.username
        first_name = message.from_user.first_name
        try:
            User.create(
                user_id = user_id,
                user_name = username,
                first_name = first_name,
                lang_for_mailing = 'ru-en'
            )
            bot.send_message(message.chat.id, f"üëã–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n"
                                              "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–ª–æ–≤–∞, "
                                              "–∞ —Ç–∞–∫–∂–µ —É–∑–Ω–∞—Ç—å –Ω–æ–≤—ã–µ —Å–∏–Ω–æ–Ω–∏–º—ã.\n"
                                              "üåê–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω—É–∂–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ\n\n"
                                              "‚Ü©Ô∏è–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>", reply_markup=choise_lang_markup(), parse_mode='HTML')
        except IntegrityError:
            bot.send_message(message.chat.id, f"üëã–†–∞–¥ —Å–Ω–æ–≤–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!\n"
                                              "üåê–î–ª—è –≤—ã–±–æ—Ä–∞ –Ω—É–∂–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ\n\n"
                                              "‚Ü©Ô∏è–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>", reply_markup=choise_lang_markup(), parse_mode='HTML')
        bot.set_state(message.from_user.id, reg_states.choise, message.chat.id)

    @bot.message_handler(commands=['history'])
    def get_history(message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /history
        :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏—Å—Ç–æ—Ä–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ä–∞–∑–¥–µ–ª–æ–≤
        """
        curr_user = User.get_or_none(User.user_id == message.from_user.id)
        if curr_user:
            inst = User.get(User.user_id == message.from_user.id)
            data_list = inst.histories
            last_5_requests = data_list[-5:] if len(data_list) > 5 else data_list
            output_data = 'üìñ–í–æ—Ç –∏—Å—Ç–æ—Ä–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥: \n\n'
            for i_index, i_req in enumerate(last_5_requests):
                output_data += f'üàØ{i_req}\n'
            bot.send_message(message.chat.id, output_data, reply_markup=commands(), parse_mode='HTML')
            bot.set_state(message.from_user.id, reg_states.menu, message.chat.id)
        else:
            bot.send_message(message.chat.id, '–ü–æ—Ö–æ–∂–µ —Ç—ã —Ç—É—Ç –≤–ø–µ—Ä–≤—ã–µ? –ß—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å —á—Ç–æ –∫ —á–µ–º—É –Ω–∞–∂–º–∏ –Ω–∞ /start', reply_markup=commands(), parse_mode='HTML')
            bot.set_state(message.from_user.id, reg_states.menu, message.chat.id)

    @bot.message_handler(commands=['mailing'])
    def get_mailing(message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mailing
        :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """

        curr_user = User.get_or_none(User.user_id == message.from_user.id)
        if curr_user:
            inst = User.get(User.user_id == message.from_user.id)
            if inst.mailing_flag:
                bot.send_message(message.chat.id, '‚úÖ–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ <b>–≤–∫–ª—é—á–µ–Ω–∞</b>.\n'
                                                  '–ß—Ç–æ–±—ã –≤—ã–∫–ª—é—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–ø–∫—É –≤—ã–∫–ª—é—á–µ–Ω–∏—è\n'
                                                  '‚Ü©Ô∏è–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>',
                                 reply_markup=turning_off_mailing(), parse_mode='HTML')
                bot.set_state(message.from_user.id, reg_states.in_menage_mailing, message.chat.id)
            else:
                bot.send_message(message.chat.id, 'üö´–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ <b>–≤—ã–∫–ª—é—á–µ–Ω–∞</b>.\n'
                                                  '–ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–ø–∫—É –≤–∫–ª—é—á–µ–Ω–∏—è\n'
                                                  '‚Ü©Ô∏è–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>',
                                 reply_markup=turning_on_mailing(), parse_mode='HTML')
                bot.set_state(message.from_user.id, reg_states.in_menage_mailing, message.chat.id)
        else:
            bot.send_message(message.chat.id, '–ü–æ—Ö–æ–∂–µ —Ç—ã —Ç—É—Ç –≤–ø–µ—Ä–≤—ã–µ? –ß—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å —á—Ç–æ –∫ —á–µ–º—É –Ω–∞–∂–º–∏ –Ω–∞ /start', reply_markup=commands(),
                             parse_mode='HTML')
            bot.set_state(message.from_user.id, reg_states.menu, message.chat.id)

